{"version":3,"sources":["dino.js"],"names":["hideClass","name","myClasses","document","querySelectorAll","i","l","length","style","display","Runner","outerContainerId","opt_config","instance_","outerContainerEl","querySelector","containerEl","detailsButton","config","dimensions","defaultDimensions","canvas","canvasCtx","tRex","distanceMeter","distanceRan","highestScore","time","runningTime","msPerFrame","FPS","currentSpeed","SPEED","obstacles","started","activated","crashed","paused","resizeTimerId_","playCount","audioBuffer","soundFx","audioContext","images","imagesLoaded","loadImages","window","DEFAULT_WIDTH","IS_HIDPI","devicePixelRatio","IS_IOS","navigator","userAgent","indexOf","IS_MOBILE","IS_TOUCH_ENABLED","ACCELERATION","BG_CLOUD_SPEED","BOTTOM_PAD","CLEAR_TIME","CLOUD_FREQUENCY","GAMEOVER_CLEAR_TIME","GAP_COEFFICIENT","GRAVITY","INITIAL_JUMP_VELOCITY","MAX_CLOUDS","MAX_OBSTACLE_LENGTH","MAX_SPEED","MIN_JUMP_HEIGHT","MOBILE_SPEED_COEFFICIENT","RESOURCE_TEMPLATE_ID","SPEED_DROP_COEFFICIENT","WIDTH","HEIGHT","classes","CANVAS","CONTAINER","CRASHED","ICON","TOUCH_CONTROLLER","imageSources","LDPI","id","HDPI","sounds","BUTTON_PRESS","HIT","SCORE","keycodes","JUMP","DUCK","RESTART","events","ANIM_END","CLICK","KEYDOWN","KEYUP","MOUSEDOWN","MOUSEUP","RESIZE","TOUCHEND","TOUCHSTART","VISIBILITY","BLUR","FOCUS","LOAD","prototype","updateConfigSetting","setting","value","undefined","setJumpVelocity","setSpeed","numImages","imgSource","getElementById","init","loadSounds","AudioContext","resourceTemplate","content","sound","soundSrc","src","substr","buffer","decodeBase64ToArrayBuffer","decodeAudioData","index","audioData","bind","opt_speed","speed","mobileSpeed","adjustDimensions","createElement","className","createCanvas","PLAYER","getContext","fillStyle","fill","updateCanvasScaling","horizon","Horizon","DistanceMeter","TEXT_SPRITE","Trex","TREX","appendChild","createTouchController","startListening","update","addEventListener","debounceResize","touchController","setInterval","clearInterval","boxStyles","getComputedStyle","padding","Number","paddingLeft","offsetWidth","width","height","calcXPos","clearCanvas","Math","ceil","stop","draw","gameOverPanel","updateDimensions","playIntro","playingIntro","keyframes","styleSheets","insertRule","startGame","webkitAnimation","restart","onVisibilityChange","clearRect","drawPending","now","getTimeStamp","deltaTime","jumping","updateJump","hasObstacles","jumpCount","collision","checkForCollision","gameOver","getActualDistance","maxScore","playAcheivementSound","playSound","raq","handleEvent","e","evtType","onKeyDown","onKeyUp","type","stopListening","removeEventListener","target","String","keyCode","startJump","currentTarget","preventDefault","setSpeedDrop","onJump","console","log","isjumpKey","isRunning","endJump","speedDrop","play","raqId","requestAnimationFrame","vibrate","acheivement","status","GameOverPanel","setHighScore","cancelAnimationFrame","RUNNING","classList","remove","reset","hidden","webkitHidden","soundBuffer","sourceNode","createBufferSource","connect","destination","start","opt_width","opt_height","context","floor","backingStoreRatio","webkitBackingStorePixelRatio","ratio","oldWidth","oldHeight","scale","getRandomNum","min","max","random","duration","container","opt_classname","base64String","len","str","atob","arrayBuffer","ArrayBuffer","bytes","Uint8Array","charCodeAt","Date","getTime","performance","textSprite","restartImg","canvasDimensions","TEXT_X","TEXT_Y","TEXT_WIDTH","TEXT_HEIGHT","RESTART_WIDTH","RESTART_HEIGHT","centerX","textSourceX","textSourceY","textSourceWidth","textSourceHeight","textTargetX","round","textTargetY","textTargetWidth","textTargetHeight","restartSourceWidth","restartSourceHeight","restartTargetX","restartTargetY","drawImage","obstacle","opt_canvasCtx","obstacleBoxXPos","xPos","tRexBox","CollisionBox","yPos","obstacleBox","typeConfig","size","drawCollisionBoxes","boxCompare","collisionBoxes","tRexCollisionBoxes","t","adjTrexBox","createAdjustedCollisionBox","adjObstacleBox","box","adjustment","x","y","save","strokeStyle","strokeRect","restore","tRexBoxX","tRexBoxY","obstacleBoxX","obstacleBoxY","w","h","Obstacle","obstacleImg","gapCoefficient","image","gap","MAX_GAP_COEFFICIENT","cloneCollisionBoxes","multipleSpeed","getGap","sourceWidth","sourceHeight","sourceX","isVisible","minGap","maxGap","types","groundYPos","currentFrame","currentAnimFrames","blinkDelay","animStartTime","timer","WAITING","jumpVelocity","reachedMinHeight","jumpspotX","DROP_VELOCITY","INIITAL_JUMP_VELOCITY","INTRO_DURATION","MAX_JUMP_HEIGHT","SPRITE_WIDTH","START_X_POS","JUMPING","BLINK_TIMING","animFrames","frames","setBlinkDelay","minJumpHeight","opt_status","blink","sourceY","framesElapsed","midair","spriteSheet","canvasWidth","currentDistance","highScore","digits","defaultString","flashTimer","flashIterations","DEST_WIDTH","MAX_DISTANCE_UNITS","ACHIEVEMENT_DISTANCE","COEFFICIENT","FLASH_DURATION","FLASH_ITERATIONS","maxDistanceStr","parseInt","digitPos","opt_highScore","targetX","targetY","targetWidth","targetHeight","highScoreX","translate","distance","paint","distanceStr","split","drawHighScore","globalAlpha","highScoreStr","concat","Cloud","cloudImg","containerWidth","cloudGap","MIN_CLOUD_GAP","MAX_CLOUD_GAP","MAX_SKY_LEVEL","MIN_SKY_LEVEL","HorizonLine","bgImg","sourceDimensions","sourceXPos","bumpThreshold","setSourceDimensions","YPOS","dimension","getRandomType","updateXPos","pos","increment","line1","line2","horizonOffsets","cloudFrequency","clouds","CLOUD","cloudSpeed","horizonImg","HORIZON","horizonLine","obstacleImgs","CACTUS_SMALL","CACTUS_LARGE","BUMPY_THRESHOLD","HORIZON_HEIGHT","addCloud","updateObstacles","updateClouds","numClouds","lastCloud","filter","obj","updatedObstacles","slice","shift","lastObstacle","followingObstacleCreated","addNewObstacle","obstacleTypeIndex","obstacleType","push","resize"],"mappings":"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","file":"dino.6d942b18.js","sourceRoot":"..","sourcesContent":["function hideClass(name) {\r\n     var myClasses = document.querySelectorAll(name),\r\n    i = 0,\r\n    l = myClasses.length;\r\n\r\n    for (i; i < l; i++) {\r\n      myClasses[i].style.display = 'none';\r\n    }\r\n}\r\n  // Copyright (c) 2014 The Chromium Authors. All rights reserved.\r\n  // Use of this source code is governed by a BSD-style license that can be\r\n  // found in the LICENSE file.\r\n  (function() {\r\n  'use strict';\r\n  /**\r\n  * T-Rex runner.\r\n  * @param {string} outerContainerId Outer containing element id.\r\n  * @param {object} opt_config\r\n  * @constructor\r\n  * @export\r\n  */\r\n  function Runner(outerContainerId, opt_config) {\r\n  // Singleton\r\n  if (Runner.instance_) {\r\n  return Runner.instance_;\r\n  }\r\n  Runner.instance_ = this;\r\n  this.outerContainerEl = document.querySelector(outerContainerId);\r\n  this.containerEl = null;\r\n  this.detailsButton = this.outerContainerEl.querySelector('#details-button');\r\n  this.config = opt_config || Runner.config;\r\n  this.dimensions = Runner.defaultDimensions;\r\n  this.canvas = null;\r\n  this.canvasCtx = null;\r\n  this.tRex = null;\r\n  this.distanceMeter = null;\r\n  this.distanceRan = 0;\r\n  this.highestScore = 0;\r\n  this.time = 0;\r\n  this.runningTime = 0;\r\n  this.msPerFrame = 1000 / FPS;\r\n  this.currentSpeed = this.config.SPEED;\r\n  this.obstacles = [];\r\n  this.started = false;\r\n  this.activated = false;\r\n  this.crashed = false;\r\n  this.paused = false;\r\n  this.resizeTimerId_ = null;\r\n  this.playCount = 0;\r\n  // Sound FX.\r\n  this.audioBuffer = null;\r\n  this.soundFx = {};\r\n  // Global web audio context for playing sounds.\r\n  this.audioContext = null;\r\n  // Images.\r\n  this.images = {};\r\n  this.imagesLoaded = 0;\r\n  this.loadImages();\r\n  }\r\n  window['Runner'] = Runner;\r\n  /**\r\n  * Default game width.\r\n  * @const\r\n  */\r\n  var DEFAULT_WIDTH = 600;\r\n  /**\r\n  * Frames per second.\r\n  * @const\r\n  */\r\n  var FPS = 60;\r\n  /** @const */\r\n  var IS_HIDPI = window.devicePixelRatio > 1;\r\n  /** @const */\r\n  var IS_IOS =\r\n  window.navigator.userAgent.indexOf('UIWebViewForStaticFileContent') > -1;\r\n  /** @const */\r\n  var IS_MOBILE = window.navigator.userAgent.indexOf('Mobi') > -1 || IS_IOS;\r\n  /** @const */\r\n  var IS_TOUCH_ENABLED = 'ontouchstart' in window;\r\n  /**\r\n  * Default game configuration.\r\n  * @enum {number}\r\n  */\r\n  Runner.config = {\r\n  ACCELERATION: 0.001,\r\n  BG_CLOUD_SPEED: 0.2,\r\n  BOTTOM_PAD: 10,\r\n  CLEAR_TIME: 3000,\r\n  CLOUD_FREQUENCY: 0.5,\r\n  GAMEOVER_CLEAR_TIME: 750,\r\n  GAP_COEFFICIENT: 0.6,\r\n  GRAVITY: 0.6,\r\n  INITIAL_JUMP_VELOCITY: 12,\r\n  MAX_CLOUDS: 6,\r\n  MAX_OBSTACLE_LENGTH: 3,\r\n  MAX_SPEED: 12,\r\n  MIN_JUMP_HEIGHT: 35,\r\n  MOBILE_SPEED_COEFFICIENT: 1.2,\r\n  RESOURCE_TEMPLATE_ID: 'audio-resources',\r\n  SPEED: 6,\r\n  SPEED_DROP_COEFFICIENT: 3\r\n  };\r\n  /**\r\n  * Default dimensions.\r\n  * @enum {string}\r\n  */\r\n  Runner.defaultDimensions = {\r\n  WIDTH: DEFAULT_WIDTH,\r\n  HEIGHT: 150\r\n  };\r\n  /**\r\n  * CSS class names.\r\n  * @enum {string}\r\n  */\r\n  Runner.classes = {\r\n  CANVAS: 'runner-canvas',\r\n  CONTAINER: 'runner-container',\r\n  CRASHED: 'crashed',\r\n  ICON: 'icon-offline',\r\n  TOUCH_CONTROLLER: 'controller'\r\n  };\r\n  /**\r\n  * Image source urls.\r\n  * @enum {array.<object>}\r\n  */\r\n  Runner.imageSources = {\r\n  LDPI: [\r\n  {name: 'CACTUS_LARGE', id: '1x-obstacle-large'},\r\n  {name: 'CACTUS_SMALL', id: '1x-obstacle-small'},\r\n  {name: 'CLOUD', id: '1x-cloud'},\r\n  {name: 'HORIZON', id: '1x-horizon'},\r\n  {name: 'RESTART', id: '1x-restart'},\r\n  {name: 'TEXT_SPRITE', id: '1x-text'},\r\n  {name: 'TREX', id: '1x-trex'}\r\n  ],\r\n  HDPI: [\r\n  {name: 'CACTUS_LARGE', id: '2x-obstacle-large'},\r\n  {name: 'CACTUS_SMALL', id: '2x-obstacle-small'},\r\n  {name: 'CLOUD', id: '2x-cloud'},\r\n  {name: 'HORIZON', id: '2x-horizon'},\r\n  {name: 'RESTART', id: '2x-restart'},\r\n  {name: 'TEXT_SPRITE', id: '2x-text'},\r\n  {name: 'TREX', id: '2x-trex'}\r\n  ]\r\n  };\r\n  /**\r\n  * Sound FX. Reference to the ID of the audio tag on interstitial page.\r\n  * @enum {string}\r\n  */\r\n  Runner.sounds = {\r\n  BUTTON_PRESS: 'offline-sound-press',\r\n  HIT: 'offline-sound-hit',\r\n  SCORE: 'offline-sound-reached'\r\n  };\r\n  /**\r\n  * Key code mapping.\r\n  * @enum {object}\r\n  */\r\n  Runner.keycodes = {\r\n  JUMP: {'38': 1, '32': 1}, // Up, spacebar\r\n  DUCK: {'40': 1}, // Down\r\n  RESTART: {'13': 1} // Enter\r\n  };\r\n  /**\r\n  * Runner event names.\r\n  * @enum {string}\r\n  */\r\n  Runner.events = {\r\n  ANIM_END: 'webkitAnimationEnd',\r\n  CLICK: 'click',\r\n  KEYDOWN: 'keydown',\r\n  KEYUP: 'keyup',\r\n  MOUSEDOWN: 'mousedown',\r\n  MOUSEUP: 'mouseup',\r\n  RESIZE: 'resize',\r\n  TOUCHEND: 'touchend',\r\n  TOUCHSTART: 'touchstart',\r\n  VISIBILITY: 'visibilitychange',\r\n  BLUR: 'blur',\r\n  FOCUS: 'focus',\r\n  LOAD: 'load'\r\n  };\r\n  Runner.prototype = {\r\n  /**\r\n  * Setting individual settings for debugging.\r\n  * @param {string} setting\r\n  * @param {*} value\r\n  */\r\n  updateConfigSetting: function(setting, value) {\r\n  if (setting in this.config && value != undefined) {\r\n  this.config[setting] = value;\r\n  switch (setting) {\r\n  case 'GRAVITY':\r\n  case 'MIN_JUMP_HEIGHT':\r\n  case 'SPEED_DROP_COEFFICIENT':\r\n  this.tRex.config[setting] = value;\r\n  break;\r\n  case 'INITIAL_JUMP_VELOCITY':\r\n  this.tRex.setJumpVelocity(value);\r\n  break;\r\n  case 'SPEED':\r\n  this.setSpeed(value);\r\n  break;\r\n  }\r\n  }\r\n  },\r\n  /**\r\n  * Load and cache the image assets from the page.\r\n  */\r\n  loadImages: function() {\r\n  var imageSources = IS_HIDPI ? Runner.imageSources.HDPI :\r\n  Runner.imageSources.LDPI;\r\n  var numImages = imageSources.length;\r\n  for (var i = numImages - 1; i >= 0; i--) {\r\n  var imgSource = imageSources[i];\r\n  this.images[imgSource.name] = document.getElementById(imgSource.id);\r\n  }\r\n  this.init();\r\n  },\r\n  /**\r\n  * Load and decode base 64 encoded sounds.\r\n  */\r\n  loadSounds: function() {\r\n  if (!IS_IOS) {\r\n  this.audioContext = new AudioContext();\r\n  var resourceTemplate =\r\n  document.getElementById(this.config.RESOURCE_TEMPLATE_ID).content;\r\n  for (var sound in Runner.sounds) {\r\n  var soundSrc =\r\n  resourceTemplate.getElementById(Runner.sounds[sound]).src;\r\n  soundSrc = soundSrc.substr(soundSrc.indexOf(',') + 1);\r\n  var buffer = decodeBase64ToArrayBuffer(soundSrc);\r\n  // Async, so no guarantee of order in array.\r\n  this.audioContext.decodeAudioData(buffer, function(index, audioData) {\r\n  this.soundFx[index] = audioData;\r\n  }.bind(this, sound));\r\n  }\r\n  }\r\n  },\r\n  /**\r\n  * Sets the game speed. Adjust the speed accordingly if on a smaller screen.\r\n  * @param {number} opt_speed\r\n  */\r\n  setSpeed: function(opt_speed) {\r\n  var speed = opt_speed || this.currentSpeed;\r\n  // Reduce the speed on smaller mobile screens.\r\n  if (this.dimensions.WIDTH < DEFAULT_WIDTH) {\r\n  var mobileSpeed = speed * this.dimensions.WIDTH / DEFAULT_WIDTH *\r\n  this.config.MOBILE_SPEED_COEFFICIENT;\r\n  this.currentSpeed = mobileSpeed > speed ? speed : mobileSpeed;\r\n  } else if (opt_speed) {\r\n  this.currentSpeed = opt_speed;\r\n  }\r\n  },\r\n  /**\r\n  * Game initialiser.\r\n  */\r\n  init: function() {\r\n  // Hide the static icon.\r\n  //document.querySelector('.' + Runner.classes.ICON).style.visibility = 'hidden';\r\n  this.adjustDimensions();\r\n  this.setSpeed();\r\n  this.containerEl = document.createElement('div');\r\n  this.containerEl.className = Runner.classes.CONTAINER;\r\n  // Player canvas container.\r\n  this.canvas = createCanvas(this.containerEl, this.dimensions.WIDTH,\r\n  this.dimensions.HEIGHT, Runner.classes.PLAYER);\r\n  this.canvasCtx = this.canvas.getContext('2d');\r\n  this.canvasCtx.fillStyle = '#f7f7f7';\r\n  this.canvasCtx.fill();\r\n  Runner.updateCanvasScaling(this.canvas);\r\n  // Horizon contains clouds, obstacles and the ground.\r\n  this.horizon = new Horizon(this.canvas, this.images, this.dimensions,\r\n  this.config.GAP_COEFFICIENT);\r\n  // Distance meter\r\n  this.distanceMeter = new DistanceMeter(this.canvas,\r\n  this.images.TEXT_SPRITE, this.dimensions.WIDTH);\r\n  // Draw t-rex\r\n  this.tRex = new Trex(this.canvas, this.images.TREX);\r\n  this.outerContainerEl.appendChild(this.containerEl);\r\n  if (IS_MOBILE) {\r\n  this.createTouchController();\r\n  }\r\n  this.startListening();\r\n  this.update();\r\n  window.addEventListener(Runner.events.RESIZE,\r\n  this.debounceResize.bind(this));\r\n  },\r\n  /**\r\n  * Create the touch controller. A div that covers whole screen.\r\n  */\r\n  createTouchController: function() {\r\n  this.touchController = document.createElement('div');\r\n  this.touchController.className = Runner.classes.TOUCH_CONTROLLER;\r\n  },\r\n  /**\r\n  * Debounce the resize event.\r\n  */\r\n  debounceResize: function() {\r\n  if (!this.resizeTimerId_) {\r\n  this.resizeTimerId_ =\r\n  setInterval(this.adjustDimensions.bind(this), 250);\r\n  }\r\n  },\r\n  /**\r\n  * Adjust game space dimensions on resize.\r\n  */\r\n  adjustDimensions: function() {\r\n  clearInterval(this.resizeTimerId_);\r\n  this.resizeTimerId_ = null;\r\n  var boxStyles = window.getComputedStyle(this.outerContainerEl);\r\n  var padding = Number(boxStyles.paddingLeft.substr(0,\r\n  boxStyles.paddingLeft.length - 2));\r\n  this.dimensions.WIDTH = this.outerContainerEl.offsetWidth - padding * 2;\r\n  // Redraw the elements back onto the canvas.\r\n  if (this.canvas) {\r\n  this.canvas.width = this.dimensions.WIDTH;\r\n  this.canvas.height = this.dimensions.HEIGHT;\r\n  Runner.updateCanvasScaling(this.canvas);\r\n  this.distanceMeter.calcXPos(this.dimensions.WIDTH);\r\n  this.clearCanvas();\r\n  this.horizon.update(0, 0, true);\r\n  this.tRex.update(0);\r\n  // Outer container and distance meter.\r\n  if (this.activated || this.crashed) {\r\n  this.containerEl.style.width = this.dimensions.WIDTH + 'px';\r\n  this.containerEl.style.height = this.dimensions.HEIGHT + 'px';\r\n  this.distanceMeter.update(0, Math.ceil(this.distanceRan));\r\n  this.stop();\r\n  } else {\r\n  this.tRex.draw(0, 0);\r\n  }\r\n  // Game over panel.\r\n  if (this.crashed && this.gameOverPanel) {\r\n  this.gameOverPanel.updateDimensions(this.dimensions.WIDTH);\r\n  this.gameOverPanel.draw();\r\n  }\r\n  }\r\n  },\r\n  /**\r\n  * Play the game intro.\r\n  * Canvas container width expands out to the full width.\r\n  */\r\n  playIntro: function() {\r\n  if (!this.started && !this.crashed) {\r\n  this.playingIntro = true;\r\n  this.tRex.playingIntro = true;\r\n  // CSS animation definition.\r\n  var keyframes = '@-webkit-keyframes intro { ' +\r\n  'from { width:' + Trex.config.WIDTH + 'px }' +\r\n  'to { width: ' + this.dimensions.WIDTH + 'px }' +\r\n  '}';\r\n  document.styleSheets[0].insertRule(keyframes, 0);\r\n  this.containerEl.addEventListener(Runner.events.ANIM_END,\r\n  this.startGame.bind(this));\r\n  this.containerEl.style.webkitAnimation = 'intro .4s ease-out 1 both';\r\n  this.containerEl.style.width = this.dimensions.WIDTH + 'px';\r\n  if (this.touchController) {\r\n  this.outerContainerEl.appendChild(this.touchController);\r\n  }\r\n  this.activated = true;\r\n  this.started = true;\r\n  } else if (this.crashed) {\r\n  this.restart();\r\n  }\r\n  },\r\n  /**\r\n  * Update the game status to started.\r\n  */\r\n  startGame: function() {\r\n  this.runningTime = 0;\r\n  this.playingIntro = false;\r\n  this.tRex.playingIntro = false;\r\n  this.containerEl.style.webkitAnimation = '';\r\n  this.playCount++;\r\n  // Handle tabbing off the page. Pause the current game.\r\n  window.addEventListener(Runner.events.VISIBILITY,\r\n  this.onVisibilityChange.bind(this));\r\n  window.addEventListener(Runner.events.BLUR,\r\n  this.onVisibilityChange.bind(this));\r\n  window.addEventListener(Runner.events.FOCUS,\r\n  this.onVisibilityChange.bind(this));\r\n  },\r\n  clearCanvas: function() {\r\n  this.canvasCtx.clearRect(0, 0, this.dimensions.WIDTH,\r\n  this.dimensions.HEIGHT);\r\n  },\r\n  /**\r\n  * Update the game frame.\r\n  */\r\n  update: function() {\r\n  this.drawPending = false;\r\n  var now = getTimeStamp();\r\n  var deltaTime = now - (this.time || now);\r\n  this.time = now;\r\n  if (this.activated) {\r\n  this.clearCanvas();\r\n  if (this.tRex.jumping) {\r\n  this.tRex.updateJump(deltaTime, this.config);\r\n  }\r\n  this.runningTime += deltaTime;\r\n  var hasObstacles = this.runningTime > this.config.CLEAR_TIME;\r\n  // First jump triggers the intro.\r\n  if (this.tRex.jumpCount == 1 && !this.playingIntro) {\r\n  this.playIntro();\r\n  }\r\n  // The horizon doesn't move until the intro is over.\r\n  if (this.playingIntro) {\r\n  this.horizon.update(0, this.currentSpeed, hasObstacles);\r\n  } else {\r\n  deltaTime = !this.started ? 0 : deltaTime;\r\n  this.horizon.update(deltaTime, this.currentSpeed, hasObstacles);\r\n  }\r\n  // Check for collisions.\r\n  var collision = hasObstacles &&\r\n  checkForCollision(this.horizon.obstacles[0], this.tRex);\r\n  if (!collision) {\r\n  this.distanceRan += this.currentSpeed * deltaTime / this.msPerFrame;\r\n  if (this.currentSpeed < this.config.MAX_SPEED) {\r\n  this.currentSpeed += this.config.ACCELERATION;\r\n  }\r\n  } else {\r\n  this.gameOver();\r\n  }\r\n  if (this.distanceMeter.getActualDistance(this.distanceRan) >\r\n  this.distanceMeter.maxScore) {\r\n  this.distanceRan = 0;\r\n  }\r\n  var playAcheivementSound = this.distanceMeter.update(deltaTime,\r\n  Math.ceil(this.distanceRan));\r\n  if (playAcheivementSound) {\r\n  this.playSound(this.soundFx.SCORE);\r\n  }\r\n  }\r\n  if (!this.crashed) {\r\n  this.tRex.update(deltaTime);\r\n  this.raq();\r\n  }\r\n  },\r\n  /**\r\n  * Event handler.\r\n  */\r\n  handleEvent: function(e) {\r\n  return (function(evtType, events) {\r\n  switch (evtType) {\r\n  case events.KEYDOWN:\r\n  case events.TOUCHSTART:\r\n  case events.MOUSEDOWN:\r\n  this.onKeyDown(e);\r\n  break;\r\n  case events.KEYUP:\r\n  case events.TOUCHEND:\r\n  case events.MOUSEUP:\r\n  this.onKeyUp(e);\r\n  break;\r\n  }\r\n  }.bind(this))(e.type, Runner.events);\r\n  },\r\n  /**\r\n  * Bind relevant key / mouse / touch listeners.\r\n  */\r\n  startListening: function() {\r\n  // Keys.\r\n  document.addEventListener(Runner.events.KEYDOWN, this);\r\n  document.addEventListener(Runner.events.KEYUP, this);\r\n  if (IS_MOBILE) {\r\n  // Mobile only touch devices.\r\n  this.touchController.addEventListener(Runner.events.TOUCHSTART, this);\r\n  this.touchController.addEventListener(Runner.events.TOUCHEND, this);\r\n  this.containerEl.addEventListener(Runner.events.TOUCHSTART, this);\r\n  } else {\r\n  // Mouse.\r\n  document.addEventListener(Runner.events.MOUSEDOWN, this);\r\n  document.addEventListener(Runner.events.MOUSEUP, this);\r\n  }\r\n  },\r\n  /**\r\n  * Remove all listeners.\r\n  */\r\n  stopListening: function() {\r\n  document.removeEventListener(Runner.events.KEYDOWN, this);\r\n  document.removeEventListener(Runner.events.KEYUP, this);\r\n  if (IS_MOBILE) {\r\n  this.touchController.removeEventListener(Runner.events.TOUCHSTART, this);\r\n  this.touchController.removeEventListener(Runner.events.TOUCHEND, this);\r\n  this.containerEl.removeEventListener(Runner.events.TOUCHSTART, this);\r\n  } else {\r\n  document.removeEventListener(Runner.events.MOUSEDOWN, this);\r\n  document.removeEventListener(Runner.events.MOUSEUP, this);\r\n  }\r\n  },\r\n  /**\r\n  * Process keydown.\r\n  * @param {Event} e\r\n  */\r\n  onKeyDown: function(e) {\r\n  if (e.target != this.detailsButton) {\r\n  if (!this.crashed && (Runner.keycodes.JUMP[String(e.keyCode)] ||\r\n  e.type == Runner.events.TOUCHSTART)) {\r\n  if (!this.activated) {\r\n  this.loadSounds();\r\n  this.activated = true;\r\n  }\r\n  if (!this.tRex.jumping) {\r\n  this.playSound(this.soundFx.BUTTON_PRESS);\r\n  this.tRex.startJump();\r\n  }\r\n  }\r\n  if (this.crashed && e.type == Runner.events.TOUCHSTART &&\r\n  e.currentTarget == this.containerEl) {\r\n  this.restart();\r\n  }\r\n  }\r\n  // Speed drop, activated only when jump key is not pressed.\r\n  if (Runner.keycodes.DUCK[e.keyCode] && this.tRex.jumping) {\r\n  e.preventDefault();\r\n  this.tRex.setSpeedDrop();\r\n  }\r\n  },\r\n\r\n  onJump: function()\r\n  {\r\n    console.log(\"JUMPING\");\r\n  },\r\n  /**\r\n  * Process key up.\r\n  * @param {Event} e\r\n  */\r\n  onKeyUp: function(e) {\r\n  console.log(e);\r\n  var keyCode = String(e.keyCode);\r\n  var isjumpKey = Runner.keycodes.JUMP[keyCode] ||\r\n  e.type == Runner.events.TOUCHEND ||\r\n  e.type == Runner.events.MOUSEDOWN;\r\n  if (this.isRunning() && isjumpKey) {\r\n  this.tRex.endJump();\r\n  } else if (Runner.keycodes.DUCK[keyCode]) {\r\n  this.tRex.speedDrop = false;\r\n  } else if (this.crashed) {\r\n  // Check that enough time has elapsed before allowing jump key to restart.\r\n  var deltaTime = getTimeStamp() - this.time;\r\n  if (Runner.keycodes.RESTART[keyCode] ||\r\n  (e.type == Runner.events.MOUSEUP && e.target == this.canvas) ||\r\n  (deltaTime >= this.config.GAMEOVER_CLEAR_TIME &&\r\n  Runner.keycodes.JUMP[keyCode])) {\r\n  this.restart();\r\n  }\r\n  } else if (this.paused && isjumpKey) {\r\n  this.play();\r\n  }\r\n  },\r\n  /**\r\n  * RequestAnimationFrame wrapper.\r\n  */\r\n  raq: function() {\r\n  if (!this.drawPending) {\r\n  this.drawPending = true;\r\n  this.raqId = requestAnimationFrame(this.update.bind(this));\r\n  }\r\n  },\r\n  /**\r\n  * Whether the game is running.\r\n  * @return {boolean}\r\n  */\r\n  isRunning: function() {\r\n  return !!this.raqId;\r\n  },\r\n  /**\r\n  * Game over state.\r\n  */\r\n  gameOver: function() {\r\n  this.playSound(this.soundFx.HIT);\r\n  vibrate(200);\r\n  this.stop();\r\n  this.crashed = true;\r\n  this.distanceMeter.acheivement = false;\r\n  this.tRex.update(100, Trex.status.CRASHED);\r\n  // Game over panel.\r\n  if (!this.gameOverPanel) {\r\n  this.gameOverPanel = new GameOverPanel(this.canvas,\r\n  this.images.TEXT_SPRITE, this.images.RESTART,\r\n  this.dimensions);\r\n  } else {\r\n  this.gameOverPanel.draw();\r\n  }\r\n  // Update the high score.\r\n  if (this.distanceRan > this.highestScore) {\r\n  this.highestScore = Math.ceil(this.distanceRan);\r\n  this.distanceMeter.setHighScore(this.highestScore);\r\n  }\r\n  // Reset the time clock.\r\n  this.time = getTimeStamp();\r\n  },\r\n  stop: function() {\r\n  this.activated = false;\r\n  this.paused = true;\r\n  cancelAnimationFrame(this.raqId);\r\n  this.raqId = 0;\r\n  },\r\n  play: function() {\r\n  if (!this.crashed) {\r\n  this.activated = true;\r\n  this.paused = false;\r\n  this.tRex.update(0, Trex.status.RUNNING);\r\n  this.time = getTimeStamp();\r\n  this.update();\r\n  }\r\n  },\r\n  restart: function() {\r\n  if (!this.raqId) {\r\n  this.playCount++;\r\n  this.runningTime = 0;\r\n  this.activated = true;\r\n  this.crashed = false;\r\n  this.distanceRan = 0;\r\n  this.setSpeed(this.config.SPEED);\r\n  this.time = getTimeStamp();\r\n  this.containerEl.classList.remove(Runner.classes.CRASHED);\r\n  this.clearCanvas();\r\n  this.distanceMeter.reset(this.highestScore);\r\n  this.horizon.reset();\r\n  this.tRex.reset();\r\n  this.playSound(this.soundFx.BUTTON_PRESS);\r\n  this.update();\r\n  }\r\n  },\r\n  /**\r\n  * Pause the game if the tab is not in focus.\r\n  */\r\n  onVisibilityChange: function(e) {\r\n  if (document.hidden || document.webkitHidden || e.type == 'blur') {\r\n  this.stop();\r\n  } else {\r\n  this.play();\r\n  }\r\n  },\r\n  /**\r\n  * Play a sound.\r\n  * @param {SoundBuffer} soundBuffer\r\n  */\r\n  playSound: function(soundBuffer) {\r\n  if (soundBuffer) {\r\n  var sourceNode = this.audioContext.createBufferSource();\r\n  sourceNode.buffer = soundBuffer;\r\n  sourceNode.connect(this.audioContext.destination);\r\n  sourceNode.start(0);\r\n  }\r\n  }\r\n  };\r\n  /**\r\n  * Updates the canvas size taking into\r\n  * account the backing store pixel ratio and\r\n  * the device pixel ratio.\r\n  *\r\n  * See article by Paul Lewis:\r\n  * https://www.html5rocks.com/en/tutorials/canvas/hidpi/\r\n  *\r\n  * @param {HTMLCanvasElement} canvas\r\n  * @param {number} opt_width\r\n  * @param {number} opt_height\r\n  * @return {boolean} Whether the canvas was scaled.\r\n  */\r\n  Runner.updateCanvasScaling = function(canvas, opt_width, opt_height) {\r\n  var context = canvas.getContext('2d');\r\n  // Query the various pixel ratios\r\n  var devicePixelRatio = Math.floor(window.devicePixelRatio) || 1;\r\n  var backingStoreRatio = Math.floor(context.webkitBackingStorePixelRatio) || 1;\r\n  var ratio = devicePixelRatio / backingStoreRatio;\r\n  // Upscale the canvas if the two ratios don't match\r\n  if (devicePixelRatio !== backingStoreRatio) {\r\n  var oldWidth = opt_width || canvas.width;\r\n  var oldHeight = opt_height || canvas.height;\r\n  canvas.width = oldWidth * ratio;\r\n  canvas.height = oldHeight * ratio;\r\n  canvas.style.width = oldWidth + 'px';\r\n  canvas.style.height = oldHeight + 'px';\r\n  // Scale the context to counter the fact that we've manually scaled\r\n  // our canvas element.\r\n  context.scale(ratio, ratio);\r\n  return true;\r\n  }\r\n  return false;\r\n  };\r\n  /**\r\n  * Get random number.\r\n  * @param {number} min\r\n  * @param {number} max\r\n  * @param {number}\r\n  */\r\n  function getRandomNum(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n  /**\r\n  * Vibrate on mobile devices.\r\n  * @param {number} duration Duration of the vibration in milliseconds.\r\n  */\r\n  function vibrate(duration) {\r\n  if (IS_MOBILE && window.navigator.vibrate) {\r\n  window.navigator.vibrate(duration);\r\n  }\r\n  }\r\n  /**\r\n  * Create canvas element.\r\n  * @param {HTMLElement} container Element to append canvas to.\r\n  * @param {number} width\r\n  * @param {number} height\r\n  * @param {string} opt_classname\r\n  * @return {HTMLCanvasElement}\r\n  */\r\n  function createCanvas(container, width, height, opt_classname) {\r\n  var canvas = document.createElement('canvas');\r\n  canvas.className = opt_classname ? Runner.classes.CANVAS + ' ' +\r\n  opt_classname : Runner.classes.CANVAS;\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  container.appendChild(canvas);\r\n  return canvas;\r\n  }\r\n  /**\r\n  * Decodes the base 64 audio to ArrayBuffer used by Web Audio.\r\n  * @param {string} base64String\r\n  */\r\n  function decodeBase64ToArrayBuffer(base64String) {\r\n  var len = (base64String.length / 4) * 3;\r\n  var str = atob(base64String);\r\n  var arrayBuffer = new ArrayBuffer(len);\r\n  var bytes = new Uint8Array(arrayBuffer);\r\n  for (var i = 0; i < len; i++) {\r\n  bytes[i] = str.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n  }\r\n  /**\r\n  * Return the current timestamp.\r\n  * @return {number}\r\n  */\r\n  function getTimeStamp() {\r\n  return IS_IOS ? new Date().getTime() : performance.now();\r\n  }\r\n  //******************************************************************************\r\n  /**\r\n  * Game over panel.\r\n  * @param {!HTMLCanvasElement} canvas\r\n  * @param {!HTMLImage} textSprite\r\n  * @param {!HTMLImage} restartImg\r\n  * @param {!Object} dimensions Canvas dimensions.\r\n  * @constructor\r\n  */\r\n  function GameOverPanel(canvas, textSprite, restartImg, dimensions) {\r\n  this.canvas = canvas;\r\n  this.canvasCtx = canvas.getContext('2d');\r\n  this.canvasDimensions = dimensions;\r\n  this.textSprite = textSprite;\r\n  this.restartImg = restartImg;\r\n  this.draw();\r\n  };\r\n  /**\r\n  * Dimensions used in the panel.\r\n  * @enum {number}\r\n  */\r\n  GameOverPanel.dimensions = {\r\n  TEXT_X: 0,\r\n  TEXT_Y: 13,\r\n  TEXT_WIDTH: 191,\r\n  TEXT_HEIGHT: 11,\r\n  RESTART_WIDTH: 36,\r\n  RESTART_HEIGHT: 32\r\n  };\r\n  GameOverPanel.prototype = {\r\n  /**\r\n  * Update the panel dimensions.\r\n  * @param {number} width New canvas width.\r\n  * @param {number} opt_height Optional new canvas height.\r\n  */\r\n  updateDimensions: function(width, opt_height) {\r\n  this.canvasDimensions.WIDTH = width;\r\n  if (opt_height) {\r\n  this.canvasDimensions.HEIGHT = opt_height;\r\n  }\r\n  },\r\n  /**\r\n  * Draw the panel.\r\n  */\r\n  draw: function() {\r\n  var dimensions = GameOverPanel.dimensions;\r\n  var centerX = this.canvasDimensions.WIDTH / 2;\r\n  // Game over text.\r\n  var textSourceX = dimensions.TEXT_X;\r\n  var textSourceY = dimensions.TEXT_Y;\r\n  var textSourceWidth = dimensions.TEXT_WIDTH;\r\n  var textSourceHeight = dimensions.TEXT_HEIGHT;\r\n  var textTargetX = Math.round(centerX - (dimensions.TEXT_WIDTH / 2));\r\n  var textTargetY = Math.round((this.canvasDimensions.HEIGHT - 25) / 3);\r\n  var textTargetWidth = dimensions.TEXT_WIDTH;\r\n  var textTargetHeight = dimensions.TEXT_HEIGHT;\r\n  var restartSourceWidth = dimensions.RESTART_WIDTH;\r\n  var restartSourceHeight = dimensions.RESTART_HEIGHT;\r\n  var restartTargetX = centerX - (dimensions.RESTART_WIDTH / 2);\r\n  var restartTargetY = this.canvasDimensions.HEIGHT / 2;\r\n  if (IS_HIDPI) {\r\n  textSourceY *= 2;\r\n  textSourceX *= 2;\r\n  textSourceWidth *= 2;\r\n  textSourceHeight *= 2;\r\n  restartSourceWidth *= 2;\r\n  restartSourceHeight *= 2;\r\n  }\r\n  // Game over text from sprite.\r\n  this.canvasCtx.drawImage(this.textSprite,\r\n  textSourceX, textSourceY, textSourceWidth, textSourceHeight,\r\n  textTargetX, textTargetY, textTargetWidth, textTargetHeight);\r\n  // Restart button.\r\n  this.canvasCtx.drawImage(this.restartImg, 0, 0,\r\n  restartSourceWidth, restartSourceHeight,\r\n  restartTargetX, restartTargetY, dimensions.RESTART_WIDTH,\r\n  dimensions.RESTART_HEIGHT);\r\n  }\r\n  };\r\n  //******************************************************************************\r\n  /**\r\n  * Check for a collision.\r\n  * @param {!Obstacle} obstacle\r\n  * @param {!Trex} tRex T-rex object.\r\n  * @param {HTMLCanvasContext} opt_canvasCtx Optional canvas context for drawing\r\n  * collision boxes.\r\n  * @return {Array.<CollisionBox>}\r\n  */\r\n  function checkForCollision(obstacle, tRex, opt_canvasCtx) {\r\n  var obstacleBoxXPos = Runner.defaultDimensions.WIDTH + obstacle.xPos;\r\n  // Adjustments are made to the bounding box as there is a 1 pixel white\r\n  // border around the t-rex and obstacles.\r\n  var tRexBox = new CollisionBox(\r\n  tRex.xPos + 1,\r\n  tRex.yPos + 1,\r\n  tRex.config.WIDTH - 2,\r\n  tRex.config.HEIGHT - 2);\r\n  var obstacleBox = new CollisionBox(\r\n  obstacle.xPos + 1,\r\n  obstacle.yPos + 1,\r\n  obstacle.typeConfig.width * obstacle.size - 2,\r\n  obstacle.typeConfig.height - 2);\r\n  // Debug outer box\r\n  if (opt_canvasCtx) {\r\n  drawCollisionBoxes(opt_canvasCtx, tRexBox, obstacleBox);\r\n  }\r\n  // Simple outer bounds check.\r\n  if (boxCompare(tRexBox, obstacleBox)) {\r\n  var collisionBoxes = obstacle.collisionBoxes;\r\n  var tRexCollisionBoxes = Trex.collisionBoxes;\r\n  // Detailed axis aligned box check.\r\n  for (var t = 0; t < tRexCollisionBoxes.length; t++) {\r\n  for (var i = 0; i < collisionBoxes.length; i++) {\r\n  // Adjust the box to actual positions.\r\n  var adjTrexBox =\r\n  createAdjustedCollisionBox(tRexCollisionBoxes[t], tRexBox);\r\n  var adjObstacleBox =\r\n  createAdjustedCollisionBox(collisionBoxes[i], obstacleBox);\r\n  var crashed = boxCompare(adjTrexBox, adjObstacleBox);\r\n  // Draw boxes for debug.\r\n  if (opt_canvasCtx) {\r\n  drawCollisionBoxes(opt_canvasCtx, adjTrexBox, adjObstacleBox);\r\n  }\r\n  if (crashed) {\r\n  return [adjTrexBox, adjObstacleBox];\r\n  }\r\n  }\r\n  }\r\n  }\r\n  return false;\r\n  };\r\n  /**\r\n  * Adjust the collision box.\r\n  * @param {!CollisionBox} box The original box.\r\n  * @param {!CollisionBox} adjustment Adjustment box.\r\n  * @return {CollisionBox} The adjusted collision box object.\r\n  */\r\n  function createAdjustedCollisionBox(box, adjustment) {\r\n  return new CollisionBox(\r\n  box.x + adjustment.x,\r\n  box.y + adjustment.y,\r\n  box.width,\r\n  box.height);\r\n  };\r\n  /**\r\n  * Draw the collision boxes for debug.\r\n  */\r\n  function drawCollisionBoxes(canvasCtx, tRexBox, obstacleBox) {\r\n  canvasCtx.save();\r\n  canvasCtx.strokeStyle = '#f00';\r\n  canvasCtx.strokeRect(tRexBox.x, tRexBox.y,\r\n  tRexBox.width, tRexBox.height);\r\n  canvasCtx.strokeStyle = '#0f0';\r\n  canvasCtx.strokeRect(obstacleBox.x, obstacleBox.y,\r\n  obstacleBox.width, obstacleBox.height);\r\n  canvasCtx.restore();\r\n  };\r\n  /**\r\n  * Compare two collision boxes for a collision.\r\n  * @param {CollisionBox} tRexBox\r\n  * @param {CollisionBox} obstacleBox\r\n  * @return {boolean} Whether the boxes intersected.\r\n  */\r\n  function boxCompare(tRexBox, obstacleBox) {\r\n  var crashed = false;\r\n  var tRexBoxX = tRexBox.x;\r\n  var tRexBoxY = tRexBox.y;\r\n  var obstacleBoxX = obstacleBox.x;\r\n  var obstacleBoxY = obstacleBox.y;\r\n  // Axis-Aligned Bounding Box method.\r\n  if (tRexBox.x < obstacleBoxX + obstacleBox.width &&\r\n  tRexBox.x + tRexBox.width > obstacleBoxX &&\r\n  tRexBox.y < obstacleBox.y + obstacleBox.height &&\r\n  tRexBox.height + tRexBox.y > obstacleBox.y) {\r\n  crashed = true;\r\n  }\r\n  return crashed;\r\n  };\r\n  //******************************************************************************\r\n  /**\r\n  * Collision box object.\r\n  * @param {number} x X position.\r\n  * @param {number} y Y Position.\r\n  * @param {number} w Width.\r\n  * @param {number} h Height.\r\n  */\r\n  function CollisionBox(x, y, w, h) {\r\n  this.x = x;\r\n  this.y = y;\r\n  this.width = w;\r\n  this.height = h;\r\n  };\r\n  //******************************************************************************\r\n  /**\r\n  * Obstacle.\r\n  * @param {HTMLCanvasCtx} canvasCtx\r\n  * @param {Obstacle.type} type\r\n  * @param {image} obstacleImg Image sprite.\r\n  * @param {Object} dimensions\r\n  * @param {number} gapCoefficient Mutipler in determining the gap.\r\n  * @param {number} speed\r\n  */\r\n  function Obstacle(canvasCtx, type, obstacleImg, dimensions,\r\n  gapCoefficient, speed) {\r\n  this.canvasCtx = canvasCtx;\r\n  this.image = obstacleImg;\r\n  this.typeConfig = type;\r\n  this.gapCoefficient = gapCoefficient;\r\n  this.size = getRandomNum(1, Obstacle.MAX_OBSTACLE_LENGTH);\r\n  this.dimensions = dimensions;\r\n  this.remove = false;\r\n  this.xPos = 0;\r\n  this.yPos = this.typeConfig.yPos;\r\n  this.width = 0;\r\n  this.collisionBoxes = [];\r\n  this.gap = 0;\r\n  this.init(speed);\r\n  };\r\n  /**\r\n  * Coefficient for calculating the maximum gap.\r\n  * @const\r\n  */\r\n  Obstacle.MAX_GAP_COEFFICIENT = 1.5;\r\n  /**\r\n  * Maximum obstacle grouping count.\r\n  * @const\r\n  */\r\n  Obstacle.MAX_OBSTACLE_LENGTH = 3,\r\n  Obstacle.prototype = {\r\n  /**\r\n  * Initialise the DOM for the obstacle.\r\n  * @param {number} speed\r\n  */\r\n  init: function(speed) {\r\n  this.cloneCollisionBoxes();\r\n  // Only allow sizing if we're at the right speed.\r\n  if (this.size > 1 && this.typeConfig.multipleSpeed > speed) {\r\n  this.size = 1;\r\n  }\r\n  this.width = this.typeConfig.width * this.size;\r\n  this.xPos = this.dimensions.WIDTH - this.width;\r\n  this.draw();\r\n  // Make collision box adjustments,\r\n  // Central box is adjusted to the size as one box.\r\n  // ____ ______ ________\r\n  // _| |-| _| |-| _| |-|\r\n  // | |<->| | | |<--->| | | |<----->| |\r\n  // | | 1 | | | | 2 | | | | 3 | |\r\n  // |_|___|_| |_|_____|_| |_|_______|_|\r\n  //\r\n  if (this.size > 1) {\r\n  this.collisionBoxes[1].width = this.width - this.collisionBoxes[0].width -\r\n  this.collisionBoxes[2].width;\r\n  this.collisionBoxes[2].x = this.width - this.collisionBoxes[2].width;\r\n  }\r\n  this.gap = this.getGap(this.gapCoefficient, speed);\r\n  },\r\n  /**\r\n  * Draw and crop based on size.\r\n  */\r\n  draw: function() {\r\n  var sourceWidth = this.typeConfig.width;\r\n  var sourceHeight = this.typeConfig.height;\r\n  if (IS_HIDPI) {\r\n  sourceWidth = sourceWidth * 2;\r\n  sourceHeight = sourceHeight * 2;\r\n  }\r\n  // Sprite\r\n  var sourceX = (sourceWidth * this.size) * (0.5 * (this.size - 1));\r\n  this.canvasCtx.drawImage(this.image,\r\n  sourceX, 0,\r\n  sourceWidth * this.size, sourceHeight,\r\n  this.xPos, this.yPos,\r\n  this.typeConfig.width * this.size, this.typeConfig.height);\r\n  },\r\n  /**\r\n  * Obstacle frame update.\r\n  * @param {number} deltaTime\r\n  * @param {number} speed\r\n  */\r\n  update: function(deltaTime, speed) {\r\n  if (!this.remove) {\r\n  this.xPos -= Math.floor((speed * FPS / 1000) * deltaTime);\r\n  this.draw();\r\n  if (!this.isVisible()) {\r\n  this.remove = true;\r\n  }\r\n  }\r\n  },\r\n  /**\r\n  * Calculate a random gap size.\r\n  * - Minimum gap gets wider as speed increses\r\n  * @param {number} gapCoefficient\r\n  * @param {number} speed\r\n  * @return {number} The gap size.\r\n  */\r\n  getGap: function(gapCoefficient, speed) {\r\n  var minGap = Math.round(this.width * speed +\r\n  this.typeConfig.minGap * gapCoefficient);\r\n  var maxGap = Math.round(minGap * Obstacle.MAX_GAP_COEFFICIENT);\r\n  return getRandomNum(minGap, maxGap);\r\n  },\r\n  /**\r\n  * Check if obstacle is visible.\r\n  * @return {boolean} Whether the obstacle is in the game area.\r\n  */\r\n  isVisible: function() {\r\n  return this.xPos + this.width > 0;\r\n  },\r\n  /**\r\n  * Make a copy of the collision boxes, since these will change based on\r\n  * obstacle type and size.\r\n  */\r\n  cloneCollisionBoxes: function() {\r\n  var collisionBoxes = this.typeConfig.collisionBoxes;\r\n  for (var i = collisionBoxes.length - 1; i >= 0; i--) {\r\n  this.collisionBoxes[i] = new CollisionBox(collisionBoxes[i].x,\r\n  collisionBoxes[i].y, collisionBoxes[i].width,\r\n  collisionBoxes[i].height);\r\n  }\r\n  }\r\n  };\r\n  /**\r\n  * Obstacle definitions.\r\n  * minGap: minimum pixel space betweeen obstacles.\r\n  * multipleSpeed: Speed at which multiples are allowed.\r\n  */\r\n  Obstacle.types = [\r\n  {\r\n  type: 'CACTUS_SMALL',\r\n  className: ' cactus cactus-small ',\r\n  width: 17,\r\n  height: 35,\r\n  yPos: 105,\r\n  multipleSpeed: 3,\r\n  minGap: 120,\r\n  collisionBoxes: [\r\n  new CollisionBox(0, 7, 5, 27),\r\n  new CollisionBox(4, 0, 6, 34),\r\n  new CollisionBox(10, 4, 7, 14)\r\n  ]\r\n  },\r\n  {\r\n  type: 'CACTUS_LARGE',\r\n  className: ' cactus cactus-large ',\r\n  width: 25,\r\n  height: 50,\r\n  yPos: 90,\r\n  multipleSpeed: 6,\r\n  minGap: 120,\r\n  collisionBoxes: [\r\n  new CollisionBox(0, 12, 7, 38),\r\n  new CollisionBox(8, 0, 7, 49),\r\n  new CollisionBox(13, 10, 10, 38)\r\n  ]\r\n  }\r\n  ];\r\n  //******************************************************************************\r\n  /**\r\n  * T-rex game character.\r\n  * @param {HTMLCanvas} canvas\r\n  * @param {HTMLImage} image Character image.\r\n  * @constructor\r\n  */\r\n  function Trex(canvas, image) {\r\n  this.canvas = canvas;\r\n  this.canvasCtx = canvas.getContext('2d');\r\n  this.image = image;\r\n  this.xPos = 0;\r\n  this.yPos = 0;\r\n  // Position when on the ground.\r\n  this.groundYPos = 0;\r\n  this.currentFrame = 0;\r\n  this.currentAnimFrames = [];\r\n  this.blinkDelay = 0;\r\n  this.animStartTime = 0;\r\n  this.timer = 0;\r\n  this.msPerFrame = 1000 / FPS;\r\n  this.config = Trex.config;\r\n  // Current status.\r\n  this.status = Trex.status.WAITING;\r\n  this.jumping = false;\r\n  this.jumpVelocity = 0;\r\n  this.reachedMinHeight = false;\r\n  this.speedDrop = false;\r\n  this.jumpCount = 0;\r\n  this.jumpspotX = 0;\r\n  this.init();\r\n  };\r\n  /**\r\n  * T-rex player config.\r\n  * @enum {number}\r\n  */\r\n  Trex.config = {\r\n  DROP_VELOCITY: -5,\r\n  GRAVITY: 0.6,\r\n  HEIGHT: 47,\r\n  INIITAL_JUMP_VELOCITY: -10,\r\n  INTRO_DURATION: 1500,\r\n  MAX_JUMP_HEIGHT: 30,\r\n  MIN_JUMP_HEIGHT: 30,\r\n  SPEED_DROP_COEFFICIENT: 3,\r\n  SPRITE_WIDTH: 262,\r\n  START_X_POS: 50,\r\n  WIDTH: 44\r\n  };\r\n  /**\r\n  * Used in collision detection.\r\n  * @type {Array.<CollisionBox>}\r\n  */\r\n  Trex.collisionBoxes = [\r\n  new CollisionBox(1, -1, 30, 26),\r\n  new CollisionBox(32, 0, 8, 16),\r\n  new CollisionBox(10, 35, 14, 8),\r\n  new CollisionBox(1, 24, 29, 5),\r\n  new CollisionBox(5, 30, 21, 4),\r\n  new CollisionBox(9, 34, 15, 4)\r\n  ];\r\n  /**\r\n  * Animation states.\r\n  * @enum {string}\r\n  */\r\n  Trex.status = {\r\n  CRASHED: 'CRASHED',\r\n  JUMPING: 'JUMPING',\r\n  RUNNING: 'RUNNING',\r\n  WAITING: 'WAITING'\r\n  };\r\n  /**\r\n  * Blinking coefficient.\r\n  * @const\r\n  */\r\n  Trex.BLINK_TIMING = 7000;\r\n  /**\r\n  * Animation config for different states.\r\n  * @enum {object}\r\n  */\r\n  Trex.animFrames = {\r\n  WAITING: {\r\n  frames: [44, 0],\r\n  msPerFrame: 1000 / 3\r\n  },\r\n  RUNNING: {\r\n  frames: [88, 132],\r\n  msPerFrame: 1000 / 12\r\n  },\r\n  CRASHED: {\r\n  frames: [220],\r\n  msPerFrame: 1000 / 60\r\n  },\r\n  JUMPING: {\r\n  frames: [0],\r\n  msPerFrame: 1000 / 60\r\n  }\r\n  };\r\n  Trex.prototype = {\r\n  /**\r\n  * T-rex player initaliser.\r\n  * Sets the t-rex to blink at random intervals.\r\n  */\r\n  init: function() {\r\n  this.blinkDelay = this.setBlinkDelay();\r\n  this.groundYPos = Runner.defaultDimensions.HEIGHT - this.config.HEIGHT -\r\n  Runner.config.BOTTOM_PAD;\r\n  this.yPos = this.groundYPos;\r\n  this.minJumpHeight = this.groundYPos - this.config.MIN_JUMP_HEIGHT;\r\n  this.draw(0, 0);\r\n  this.update(0, Trex.status.WAITING);\r\n  },\r\n  /**\r\n  * Setter for the jump velocity.\r\n  * The approriate drop velocity is also set.\r\n  */\r\n  setJumpVelocity: function(setting) {\r\n  this.config.INIITAL_JUMP_VELOCITY = -setting;\r\n  this.config.DROP_VELOCITY = -setting / 2;\r\n  },\r\n  /**\r\n  * Set the animation status.\r\n  * @param {!number} deltaTime\r\n  * @param {Trex.status} status Optional status to switch to.\r\n  */\r\n  update: function(deltaTime, opt_status) {\r\n  this.timer += deltaTime;\r\n  // Update the status.\r\n  if (opt_status) {\r\n  this.status = opt_status;\r\n  this.currentFrame = 0;\r\n  this.msPerFrame = Trex.animFrames[opt_status].msPerFrame;\r\n  this.currentAnimFrames = Trex.animFrames[opt_status].frames;\r\n  if (opt_status == Trex.status.WAITING) {\r\n  this.animStartTime = getTimeStamp();\r\n  this.setBlinkDelay();\r\n  }\r\n  }\r\n  // Game intro animation, T-rex moves in from the left.\r\n  if (this.playingIntro && this.xPos < this.config.START_X_POS) {\r\n  this.xPos += Math.round((this.config.START_X_POS /\r\n  this.config.INTRO_DURATION) * deltaTime);\r\n  }\r\n  if (this.status == Trex.status.WAITING) {\r\n  this.blink(getTimeStamp());\r\n  } else {\r\n  this.draw(this.currentAnimFrames[this.currentFrame], 0);\r\n  }\r\n  // Update the frame position.\r\n  if (this.timer >= this.msPerFrame) {\r\n  this.currentFrame = this.currentFrame ==\r\n  this.currentAnimFrames.length - 1 ? 0 : this.currentFrame + 1;\r\n  this.timer = 0;\r\n  }\r\n  },\r\n  /**\r\n  * Draw the t-rex to a particular position.\r\n  * @param {number} x\r\n  * @param {number} y\r\n  */\r\n  draw: function(x, y) {\r\n  var sourceX = x;\r\n  var sourceY = y;\r\n  var sourceWidth = this.config.WIDTH;\r\n  var sourceHeight = this.config.HEIGHT;\r\n  if (IS_HIDPI) {\r\n  sourceX *= 2;\r\n  sourceY *= 2;\r\n  sourceWidth *= 2;\r\n  sourceHeight *= 2;\r\n  }\r\n  this.canvasCtx.drawImage(this.image, sourceX, sourceY,\r\n  sourceWidth, sourceHeight,\r\n  this.xPos, this.yPos,\r\n  this.config.WIDTH, this.config.HEIGHT);\r\n  },\r\n  /**\r\n  * Sets a random time for the blink to happen.\r\n  */\r\n  setBlinkDelay: function() {\r\n  this.blinkDelay = Math.ceil(Math.random() * Trex.BLINK_TIMING);\r\n  },\r\n  /**\r\n  * Make t-rex blink at random intervals.\r\n  * @param {number} time Current time in milliseconds.\r\n  */\r\n  blink: function(time) {\r\n  var deltaTime = time - this.animStartTime;\r\n  if (deltaTime >= this.blinkDelay) {\r\n  this.draw(this.currentAnimFrames[this.currentFrame], 0);\r\n  if (this.currentFrame == 1) {\r\n  // Set new random delay to blink.\r\n  this.setBlinkDelay();\r\n  this.animStartTime = time;\r\n  }\r\n  }\r\n  },\r\n  /**\r\n  * Initialise a jump.\r\n  */\r\n  startJump: function() {\r\n  if (!this.jumping) {\r\n  this.update(0, Trex.status.JUMPING);\r\n  this.jumpVelocity = this.config.INIITAL_JUMP_VELOCITY;\r\n  this.jumping = true;\r\n  this.reachedMinHeight = false;\r\n  this.speedDrop = false;\r\n  }\r\n  },\r\n  /**\r\n  * Jump is complete, falling down.\r\n  */\r\n  endJump: function() {\r\n  if (this.reachedMinHeight &&\r\n  this.jumpVelocity < this.config.DROP_VELOCITY) {\r\n  this.jumpVelocity = this.config.DROP_VELOCITY;\r\n  }\r\n  },\r\n  /**\r\n  * Update frame for a jump.\r\n  * @param {number} deltaTime\r\n  */\r\n  updateJump: function(deltaTime) {\r\n  var msPerFrame = Trex.animFrames[this.status].msPerFrame;\r\n  var framesElapsed = deltaTime / msPerFrame;\r\n  // Speed drop makes Trex fall faster.\r\n  if (this.speedDrop) {\r\n  this.yPos += Math.round(this.jumpVelocity *\r\n  this.config.SPEED_DROP_COEFFICIENT * framesElapsed);\r\n  } else {\r\n  this.yPos += Math.round(this.jumpVelocity * framesElapsed);\r\n  }\r\n  this.jumpVelocity += this.config.GRAVITY * framesElapsed;\r\n  // Minimum height has been reached.\r\n  if (this.yPos < this.minJumpHeight || this.speedDrop) {\r\n  this.reachedMinHeight = true;\r\n  }\r\n  // Reached max height\r\n  if (this.yPos < this.config.MAX_JUMP_HEIGHT || this.speedDrop) {\r\n  this.endJump();\r\n  }\r\n  // Back down at ground level. Jump completed.\r\n  if (this.yPos > this.groundYPos) {\r\n  this.reset();\r\n  this.jumpCount++;\r\n  }\r\n  this.update(deltaTime);\r\n  },\r\n  /**\r\n  * Set the speed drop. Immediately cancels the current jump.\r\n  */\r\n  setSpeedDrop: function() {\r\n  this.speedDrop = true;\r\n  this.jumpVelocity = 1;\r\n  },\r\n  /**\r\n  * Reset the t-rex to running at start of game.\r\n  */\r\n  reset: function() {\r\n  this.yPos = this.groundYPos;\r\n  this.jumpVelocity = 0;\r\n  this.jumping = false;\r\n  this.update(0, Trex.status.RUNNING);\r\n  this.midair = false;\r\n  this.speedDrop = false;\r\n  this.jumpCount = 0;\r\n  }\r\n  };\r\n  //******************************************************************************\r\n  /**\r\n  * Handles displaying the distance meter.\r\n  * @param {!HTMLCanvasElement} canvas\r\n  * @param {!HTMLImage} spriteSheet Image sprite.\r\n  * @param {number} canvasWidth\r\n  * @constructor\r\n  */\r\n  function DistanceMeter(canvas, spriteSheet, canvasWidth) {\r\n  this.canvas = canvas;\r\n  this.canvasCtx = canvas.getContext('2d');\r\n  this.image = spriteSheet;\r\n  this.x = 0;\r\n  this.y = 5;\r\n  this.currentDistance = 0;\r\n  this.maxScore = 0;\r\n  this.highScore = 0;\r\n  this.container = null;\r\n  this.digits = [];\r\n  this.acheivement = false;\r\n  this.defaultString = '';\r\n  this.flashTimer = 0;\r\n  this.flashIterations = 0;\r\n  this.config = DistanceMeter.config;\r\n  this.init(canvasWidth);\r\n  };\r\n  /**\r\n  * @enum {number}\r\n  */\r\n  DistanceMeter.dimensions = {\r\n  WIDTH: 10,\r\n  HEIGHT: 13,\r\n  DEST_WIDTH: 11\r\n  };\r\n  /**\r\n  * Y positioning of the digits in the sprite sheet.\r\n  * X position is always 0.\r\n  * @type {array.<number>}\r\n  */\r\n  DistanceMeter.yPos = [0, 13, 27, 40, 53, 67, 80, 93, 107, 120];\r\n  /**\r\n  * Distance meter config.\r\n  * @enum {number}\r\n  */\r\n  DistanceMeter.config = {\r\n  // Number of digits.\r\n  MAX_DISTANCE_UNITS: 5,\r\n  // Distance that causes achievement animation.\r\n  ACHIEVEMENT_DISTANCE: 100,\r\n  // Used for conversion from pixel distance to a scaled unit.\r\n  COEFFICIENT: 0.025,\r\n  // Flash duration in milliseconds.\r\n  FLASH_DURATION: 1000 / 4,\r\n  // Flash iterations for achievement animation.\r\n  FLASH_ITERATIONS: 3\r\n  };\r\n  DistanceMeter.prototype = {\r\n  /**\r\n  * Initialise the distance meter to '00000'.\r\n  * @param {number} width Canvas width in px.\r\n  */\r\n  init: function(width) {\r\n  var maxDistanceStr = '';\r\n  this.calcXPos(width);\r\n  this.maxScore = this.config.MAX_DISTANCE_UNITS;\r\n  for (var i = 0; i < this.config.MAX_DISTANCE_UNITS; i++) {\r\n  this.draw(i, 0);\r\n  this.defaultString += '0';\r\n  maxDistanceStr += '9';\r\n  }\r\n  this.maxScore = parseInt(maxDistanceStr);\r\n  },\r\n  /**\r\n  * Calculate the xPos in the canvas.\r\n  * @param {number} canvasWidth\r\n  */\r\n  calcXPos: function(canvasWidth) {\r\n  this.x = canvasWidth - (DistanceMeter.dimensions.DEST_WIDTH *\r\n  (this.config.MAX_DISTANCE_UNITS + 1));\r\n  },\r\n  /**\r\n  * Draw a digit to canvas.\r\n  * @param {number} digitPos Position of the digit.\r\n  * @param {number} value Digit value 0-9.\r\n  * @param {boolean} opt_highScore Whether drawing the high score.\r\n  */\r\n  draw: function(digitPos, value, opt_highScore) {\r\n  var sourceWidth = DistanceMeter.dimensions.WIDTH;\r\n  var sourceHeight = DistanceMeter.dimensions.HEIGHT;\r\n  var sourceX = DistanceMeter.dimensions.WIDTH * value;\r\n  var targetX = digitPos * DistanceMeter.dimensions.DEST_WIDTH;\r\n  var targetY = this.y;\r\n  var targetWidth = DistanceMeter.dimensions.WIDTH;\r\n  var targetHeight = DistanceMeter.dimensions.HEIGHT;\r\n  // For high DPI we 2x source values.\r\n  if (IS_HIDPI) {\r\n  sourceWidth *= 2;\r\n  sourceHeight *= 2;\r\n  sourceX *= 2;\r\n  }\r\n  this.canvasCtx.save();\r\n  if (opt_highScore) {\r\n  // Left of the current score.\r\n  var highScoreX = this.x - (this.config.MAX_DISTANCE_UNITS * 2) *\r\n  DistanceMeter.dimensions.WIDTH;\r\n  this.canvasCtx.translate(highScoreX, this.y);\r\n  } else {\r\n  this.canvasCtx.translate(this.x, this.y);\r\n  }\r\n  this.canvasCtx.drawImage(this.image, sourceX, 0,\r\n  sourceWidth, sourceHeight,\r\n  targetX, targetY,\r\n  targetWidth, targetHeight\r\n  );\r\n  this.canvasCtx.restore();\r\n  },\r\n  /**\r\n  * Covert pixel distance to a 'real' distance.\r\n  * @param {number} distance Pixel distance ran.\r\n  * @return {number} The 'real' distance ran.\r\n  */\r\n  getActualDistance: function(distance) {\r\n  return distance ?\r\n  Math.round(distance * this.config.COEFFICIENT) : 0;\r\n  },\r\n  /**\r\n  * Update the distance meter.\r\n  * @param {number} deltaTime\r\n  * @param {number} distance\r\n  * @return {boolean} Whether the acheivement sound fx should be played.\r\n  */\r\n  update: function(deltaTime, distance) {\r\n  var paint = true;\r\n  var playSound = false;\r\n  if (!this.acheivement) {\r\n  distance = this.getActualDistance(distance);\r\n  if (distance > 0) {\r\n  // Acheivement unlocked\r\n  if (distance % this.config.ACHIEVEMENT_DISTANCE == 0) {\r\n  // Flash score and play sound.\r\n  this.acheivement = true;\r\n  this.flashTimer = 0;\r\n  playSound = true;\r\n  }\r\n  // Create a string representation of the distance with leading 0.\r\n  var distanceStr = (this.defaultString +\r\n  distance).substr(-this.config.MAX_DISTANCE_UNITS);\r\n  this.digits = distanceStr.split('');\r\n  } else {\r\n  this.digits = this.defaultString.split('');\r\n  }\r\n  } else {\r\n  // Control flashing of the score on reaching acheivement.\r\n  if (this.flashIterations <= this.config.FLASH_ITERATIONS) {\r\n  this.flashTimer += deltaTime;\r\n  if (this.flashTimer < this.config.FLASH_DURATION) {\r\n  paint = false;\r\n  } else if (this.flashTimer >\r\n  this.config.FLASH_DURATION * 2) {\r\n  this.flashTimer = 0;\r\n  this.flashIterations++;\r\n  }\r\n  } else {\r\n  this.acheivement = false;\r\n  this.flashIterations = 0;\r\n  this.flashTimer = 0;\r\n  }\r\n  }\r\n  // Draw the digits if not flashing.\r\n  if (paint) {\r\n  for (var i = this.digits.length - 1; i >= 0; i--) {\r\n  this.draw(i, parseInt(this.digits[i]));\r\n  }\r\n  }\r\n  this.drawHighScore();\r\n  return playSound;\r\n  },\r\n  /**\r\n  * Draw the high score.\r\n  */\r\n  drawHighScore: function() {\r\n  this.canvasCtx.save();\r\n  this.canvasCtx.globalAlpha = .8;\r\n  for (var i = this.highScore.length - 1; i >= 0; i--) {\r\n  this.draw(i, parseInt(this.highScore[i], 10), true);\r\n  }\r\n  this.canvasCtx.restore();\r\n  },\r\n  /**\r\n  * Set the highscore as a array string.\r\n  * Position of char in the sprite: H - 10, I - 11.\r\n  * @param {number} distance Distance ran in pixels.\r\n  */\r\n  setHighScore: function(distance) {\r\n  distance = this.getActualDistance(distance);\r\n  var highScoreStr = (this.defaultString +\r\n  distance).substr(-this.config.MAX_DISTANCE_UNITS);\r\n  this.highScore = ['10', '11', ''].concat(highScoreStr.split(''));\r\n  },\r\n  /**\r\n  * Reset the distance meter back to '00000'.\r\n  */\r\n  reset: function() {\r\n  this.update(0);\r\n  this.acheivement = false;\r\n  }\r\n  };\r\n  //******************************************************************************\r\n  /**\r\n  * Cloud background item.\r\n  * Similar to an obstacle object but without collision boxes.\r\n  * @param {HTMLCanvasElement} canvas Canvas element.\r\n  * @param {Image} cloudImg\r\n  * @param {number} containerWidth\r\n  */\r\n  function Cloud(canvas, cloudImg, containerWidth) {\r\n  this.canvas = canvas;\r\n  this.canvasCtx = this.canvas.getContext('2d');\r\n  this.image = cloudImg;\r\n  this.containerWidth = containerWidth;\r\n  this.xPos = containerWidth;\r\n  this.yPos = 0;\r\n  this.remove = false;\r\n  this.cloudGap = getRandomNum(Cloud.config.MIN_CLOUD_GAP,\r\n  Cloud.config.MAX_CLOUD_GAP);\r\n  this.init();\r\n  };\r\n  /**\r\n  * Cloud object config.\r\n  * @enum {number}\r\n  */\r\n  Cloud.config = {\r\n  HEIGHT: 14,\r\n  MAX_CLOUD_GAP: 400,\r\n  MAX_SKY_LEVEL: 30,\r\n  MIN_CLOUD_GAP: 100,\r\n  MIN_SKY_LEVEL: 71,\r\n  WIDTH: 46\r\n  };\r\n  Cloud.prototype = {\r\n  /**\r\n  * Initialise the cloud. Sets the Cloud height.\r\n  */\r\n  init: function() {\r\n  this.yPos = getRandomNum(Cloud.config.MAX_SKY_LEVEL,\r\n  Cloud.config.MIN_SKY_LEVEL);\r\n  this.draw();\r\n  },\r\n  /**\r\n  * Draw the cloud.\r\n  */\r\n  draw: function() {\r\n  this.canvasCtx.save();\r\n  var sourceWidth = Cloud.config.WIDTH;\r\n  var sourceHeight = Cloud.config.HEIGHT;\r\n  if (IS_HIDPI) {\r\n  sourceWidth = sourceWidth * 2;\r\n  sourceHeight = sourceHeight * 2;\r\n  }\r\n  this.canvasCtx.drawImage(this.image, 0, 0,\r\n  sourceWidth, sourceHeight,\r\n  this.xPos, this.yPos,\r\n  Cloud.config.WIDTH, Cloud.config.HEIGHT);\r\n  this.canvasCtx.restore();\r\n  },\r\n  /**\r\n  * Update the cloud position.\r\n  * @param {number} speed\r\n  */\r\n  update: function(speed) {\r\n  if (!this.remove) {\r\n  this.xPos -= Math.ceil(speed);\r\n  this.draw();\r\n  // Mark as removeable if no longer in the canvas.\r\n  if (!this.isVisible()) {\r\n  this.remove = true;\r\n  }\r\n  }\r\n  },\r\n  /**\r\n  * Check if the cloud is visible on the stage.\r\n  * @return {boolean}\r\n  */\r\n  isVisible: function() {\r\n  return this.xPos + Cloud.config.WIDTH > 0;\r\n  }\r\n  };\r\n  //******************************************************************************\r\n  /**\r\n  * Horizon Line.\r\n  * Consists of two connecting lines. Randomly assigns a flat / bumpy horizon.\r\n  * @param {HTMLCanvasElement} canvas\r\n  * @param {HTMLImage} bgImg Horizon line sprite.\r\n  * @constructor\r\n  */\r\n  function HorizonLine(canvas, bgImg) {\r\n  this.image = bgImg;\r\n  this.canvas = canvas;\r\n  this.canvasCtx = canvas.getContext('2d');\r\n  this.sourceDimensions = {};\r\n  this.dimensions = HorizonLine.dimensions;\r\n  this.sourceXPos = [0, this.dimensions.WIDTH];\r\n  this.xPos = [];\r\n  this.yPos = 0;\r\n  this.bumpThreshold = 0.5;\r\n  this.setSourceDimensions();\r\n  this.draw();\r\n  };\r\n  /**\r\n  * Horizon line dimensions.\r\n  * @enum {number}\r\n  */\r\n  HorizonLine.dimensions = {\r\n  WIDTH: 600,\r\n  HEIGHT: 12,\r\n  YPOS: 127\r\n  };\r\n  HorizonLine.prototype = {\r\n  /**\r\n  * Set the source dimensions of the horizon line.\r\n  */\r\n  setSourceDimensions: function() {\r\n  for (var dimension in HorizonLine.dimensions) {\r\n  if (IS_HIDPI) {\r\n  if (dimension != 'YPOS') {\r\n  this.sourceDimensions[dimension] =\r\n  HorizonLine.dimensions[dimension] * 2;\r\n  }\r\n  } else {\r\n  this.sourceDimensions[dimension] =\r\n  HorizonLine.dimensions[dimension];\r\n  }\r\n  this.dimensions[dimension] = HorizonLine.dimensions[dimension];\r\n  }\r\n  this.xPos = [0, HorizonLine.dimensions.WIDTH];\r\n  this.yPos = HorizonLine.dimensions.YPOS;\r\n  },\r\n  /**\r\n  * Return the crop x position of a type.\r\n  */\r\n  getRandomType: function() {\r\n  return Math.random() > this.bumpThreshold ? this.dimensions.WIDTH : 0;\r\n  },\r\n  /**\r\n  * Draw the horizon line.\r\n  */\r\n  draw: function() {\r\n  this.canvasCtx.drawImage(this.image, this.sourceXPos[0], 0,\r\n  this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\r\n  this.xPos[0], this.yPos,\r\n  this.dimensions.WIDTH, this.dimensions.HEIGHT);\r\n  this.canvasCtx.drawImage(this.image, this.sourceXPos[1], 0,\r\n  this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\r\n  this.xPos[1], this.yPos,\r\n  this.dimensions.WIDTH, this.dimensions.HEIGHT);\r\n  },\r\n  /**\r\n  * Update the x position of an indivdual piece of the line.\r\n  * @param {number} pos Line position.\r\n  * @param {number} increment\r\n  */\r\n  updateXPos: function(pos, increment) {\r\n  var line1 = pos;\r\n  var line2 = pos == 0 ? 1 : 0;\r\n  this.xPos[line1] -= increment;\r\n  this.xPos[line2] = this.xPos[line1] + this.dimensions.WIDTH;\r\n  if (this.xPos[line1] <= -this.dimensions.WIDTH) {\r\n  this.xPos[line1] += this.dimensions.WIDTH * 2;\r\n  this.xPos[line2] = this.xPos[line1] - this.dimensions.WIDTH;\r\n  this.sourceXPos[line1] = this.getRandomType();\r\n  }\r\n  },\r\n  /**\r\n  * Update the horizon line.\r\n  * @param {number} deltaTime\r\n  * @param {number} speed\r\n  */\r\n  update: function(deltaTime, speed) {\r\n  var increment = Math.floor(speed * (FPS / 1000) * deltaTime);\r\n  if (this.xPos[0] <= 0) {\r\n  this.updateXPos(0, increment);\r\n  } else {\r\n  this.updateXPos(1, increment);\r\n  }\r\n  this.draw();\r\n  },\r\n  /**\r\n  * Reset horizon to the starting position.\r\n  */\r\n  reset: function() {\r\n  this.xPos[0] = 0;\r\n  this.xPos[1] = HorizonLine.dimensions.WIDTH;\r\n  }\r\n  };\r\n  //******************************************************************************\r\n  /**\r\n  * Horizon background class.\r\n  * @param {HTMLCanvasElement} canvas\r\n  * @param {Array.<HTMLImageElement>} images\r\n  * @param {object} dimensions Canvas dimensions.\r\n  * @param {number} gapCoefficient\r\n  * @constructor\r\n  */\r\n  function Horizon(canvas, images, dimensions, gapCoefficient) {\r\n  this.canvas = canvas;\r\n  this.canvasCtx = this.canvas.getContext('2d');\r\n  this.config = Horizon.config;\r\n  this.dimensions = dimensions;\r\n  this.gapCoefficient = gapCoefficient;\r\n  this.obstacles = [];\r\n  this.horizonOffsets = [0, 0];\r\n  this.cloudFrequency = this.config.CLOUD_FREQUENCY;\r\n  // Cloud\r\n  this.clouds = [];\r\n  this.cloudImg = images.CLOUD;\r\n  this.cloudSpeed = this.config.BG_CLOUD_SPEED;\r\n  // Horizon\r\n  this.horizonImg = images.HORIZON;\r\n  this.horizonLine = null;\r\n  // Obstacles\r\n  this.obstacleImgs = {\r\n  CACTUS_SMALL: images.CACTUS_SMALL,\r\n  CACTUS_LARGE: images.CACTUS_LARGE\r\n  };\r\n  this.init();\r\n  };\r\n  /**\r\n  * Horizon config.\r\n  * @enum {number}\r\n  */\r\n  Horizon.config = {\r\n  BG_CLOUD_SPEED: 0.2,\r\n  BUMPY_THRESHOLD: .3,\r\n  CLOUD_FREQUENCY: .5,\r\n  HORIZON_HEIGHT: 16,\r\n  MAX_CLOUDS: 6\r\n  };\r\n  Horizon.prototype = {\r\n  /**\r\n  * Initialise the horizon. Just add the line and a cloud. No obstacles.\r\n  */\r\n  init: function() {\r\n  this.addCloud();\r\n  this.horizonLine = new HorizonLine(this.canvas, this.horizonImg);\r\n  },\r\n  /**\r\n  * @param {number} deltaTime\r\n  * @param {number} currentSpeed\r\n  * @param {boolean} updateObstacles Used as an override to prevent\r\n  * the obstacles from being updated / added. This happens in the\r\n  * ease in section.\r\n  */\r\n  update: function(deltaTime, currentSpeed, updateObstacles) {\r\n  this.runningTime += deltaTime;\r\n  this.horizonLine.update(deltaTime, currentSpeed);\r\n  this.updateClouds(deltaTime, currentSpeed);\r\n  if (updateObstacles) {\r\n  this.updateObstacles(deltaTime, currentSpeed);\r\n  }\r\n  },\r\n  /**\r\n  * Update the cloud positions.\r\n  * @param {number} deltaTime\r\n  * @param {number} currentSpeed\r\n  */\r\n  updateClouds: function(deltaTime, speed) {\r\n  var cloudSpeed = this.cloudSpeed / 1000 * deltaTime * speed;\r\n  var numClouds = this.clouds.length;\r\n  if (numClouds) {\r\n  for (var i = numClouds - 1; i >= 0; i--) {\r\n  this.clouds[i].update(cloudSpeed);\r\n  }\r\n  var lastCloud = this.clouds[numClouds - 1];\r\n  // Check for adding a new cloud.\r\n  if (numClouds < this.config.MAX_CLOUDS &&\r\n  (this.dimensions.WIDTH - lastCloud.xPos) > lastCloud.cloudGap &&\r\n  this.cloudFrequency > Math.random()) {\r\n  this.addCloud();\r\n  }\r\n  // Remove expired clouds.\r\n  this.clouds = this.clouds.filter(function(obj) {\r\n  return !obj.remove;\r\n  });\r\n  }\r\n  },\r\n  /**\r\n  * Update the obstacle positions.\r\n  * @param {number} deltaTime\r\n  * @param {number} currentSpeed\r\n  */\r\n  updateObstacles: function(deltaTime, currentSpeed) {\r\n  // Obstacles, move to Horizon layer.\r\n  var updatedObstacles = this.obstacles.slice(0);\r\n  for (var i = 0; i < this.obstacles.length; i++) {\r\n  var obstacle = this.obstacles[i];\r\n  obstacle.update(deltaTime, currentSpeed);\r\n  // Clean up existing obstacles.\r\n  if (obstacle.remove) {\r\n  updatedObstacles.shift();\r\n  }\r\n  }\r\n  this.obstacles = updatedObstacles;\r\n  if (this.obstacles.length > 0) {\r\n  var lastObstacle = this.obstacles[this.obstacles.length - 1];\r\n  if (lastObstacle && !lastObstacle.followingObstacleCreated &&\r\n  lastObstacle.isVisible() &&\r\n  (lastObstacle.xPos + lastObstacle.width + lastObstacle.gap) <\r\n  this.dimensions.WIDTH) {\r\n  this.addNewObstacle(currentSpeed);\r\n  lastObstacle.followingObstacleCreated = true;\r\n  }\r\n  } else {\r\n  // Create new obstacles.\r\n  this.addNewObstacle(currentSpeed);\r\n  }\r\n  },\r\n  /**\r\n  * Add a new obstacle.\r\n  * @param {number} currentSpeed\r\n  */\r\n  addNewObstacle: function(currentSpeed) {\r\n  var obstacleTypeIndex =\r\n  getRandomNum(0, Obstacle.types.length - 1);\r\n  var obstacleType = Obstacle.types[obstacleTypeIndex];\r\n  var obstacleImg = this.obstacleImgs[obstacleType.type];\r\n  this.obstacles.push(new Obstacle(this.canvasCtx, obstacleType,\r\n  obstacleImg, this.dimensions, this.gapCoefficient, currentSpeed));\r\n  },\r\n  /**\r\n  * Reset the horizon layer.\r\n  * Remove existing obstacles and reposition the horizon line.\r\n  */\r\n  reset: function() {\r\n  this.obstacles = [];\r\n  this.horizonLine.reset();\r\n  },\r\n  /**\r\n  * Update the canvas width and scaling.\r\n  * @param {number} width Canvas width.\r\n  * @param {number} height Canvas height.\r\n  */\r\n  resize: function(width, height) {\r\n  this.canvas.width = width;\r\n  this.canvas.height = height;\r\n  },\r\n  /**\r\n  * Add a new cloud to the horizon.\r\n  */\r\n  addCloud: function() {\r\n  this.clouds.push(new Cloud(this.canvas, this.cloudImg,\r\n  this.dimensions.WIDTH));\r\n  }\r\n  };\r\n  })();\r\n"]}